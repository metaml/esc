-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema RestoreSnapshotConfiguration
module Model/Private/Elasticsearch.Types.RestoreSnapshotConfiguration where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias
import {-# SOURCE #-} Model/Private/Elasticsearch.Types.RestoreSnapshotApiConfiguration
import {-# SOURCE #-} Model/Private/Elasticsearch.Types.RestoreSnapshotRepoConfiguration

-- | Defines the object schema located at @components.schemas.RestoreSnapshotConfiguration@ in the specification.
-- 
-- Restores a snapshot from a local or remote repository.
data RestoreSnapshotConfiguration = RestoreSnapshotConfiguration {
  -- | repository_config: Configures the location of a remote repository. The default is the system repository.
  restoreSnapshotConfigurationRepositoryConfig :: (GHC.Maybe.Maybe RestoreSnapshotRepoConfiguration)
  -- | repository_name: If specified, contains the name of the snapshot repository - else will default to the Elastic Cloud system repo (\'found-snapshots\')
  , restoreSnapshotConfigurationRepositoryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | restore_payload: The configuration for the restore command, such as which indices you want to restore.
  , restoreSnapshotConfigurationRestorePayload :: (GHC.Maybe.Maybe RestoreSnapshotApiConfiguration)
  -- | snapshot_name: The name of the snapshot to restore. Use \'\\_\\_latest_success\\_\\_\' to get the most recent snapshot from the specified repository
  , restoreSnapshotConfigurationSnapshotName :: Data.Text.Internal.Text
  -- | source_cluster_id: If specified, contains the name of the source cluster id. Do not send this if you are sending repository_config
  , restoreSnapshotConfigurationSourceClusterId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | strategy: The restore strategy to use. Defaults to a full restore. Partial restore will attempt to restore unavailable indices only
  , restoreSnapshotConfigurationStrategy :: (GHC.Maybe.Maybe RestoreSnapshotConfigurationStrategy)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON RestoreSnapshotConfiguration
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("repository_config" Data.Aeson.Types.ToJSON..=)) (restoreSnapshotConfigurationRepositoryConfig obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("repository_name" Data.Aeson.Types.ToJSON..=)) (restoreSnapshotConfigurationRepositoryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("restore_payload" Data.Aeson.Types.ToJSON..=)) (restoreSnapshotConfigurationRestorePayload obj) : ["snapshot_name" Data.Aeson.Types.ToJSON..= restoreSnapshotConfigurationSnapshotName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_cluster_id" Data.Aeson.Types.ToJSON..=)) (restoreSnapshotConfigurationSourceClusterId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("strategy" Data.Aeson.Types.ToJSON..=)) (restoreSnapshotConfigurationStrategy obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("repository_config" Data.Aeson.Types.ToJSON..=)) (restoreSnapshotConfigurationRepositoryConfig obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("repository_name" Data.Aeson.Types.ToJSON..=)) (restoreSnapshotConfigurationRepositoryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("restore_payload" Data.Aeson.Types.ToJSON..=)) (restoreSnapshotConfigurationRestorePayload obj) : ["snapshot_name" Data.Aeson.Types.ToJSON..= restoreSnapshotConfigurationSnapshotName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_cluster_id" Data.Aeson.Types.ToJSON..=)) (restoreSnapshotConfigurationSourceClusterId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("strategy" Data.Aeson.Types.ToJSON..=)) (restoreSnapshotConfigurationStrategy obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON RestoreSnapshotConfiguration
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "RestoreSnapshotConfiguration" (\obj -> (((((GHC.Base.pure RestoreSnapshotConfiguration GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "repository_config")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "repository_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "restore_payload")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "snapshot_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "source_cluster_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "strategy"))
-- | Create a new 'RestoreSnapshotConfiguration' with all required fields.
mkRestoreSnapshotConfiguration :: Data.Text.Internal.Text -- ^ 'restoreSnapshotConfigurationSnapshotName'
  -> RestoreSnapshotConfiguration
mkRestoreSnapshotConfiguration restoreSnapshotConfigurationSnapshotName = RestoreSnapshotConfiguration{restoreSnapshotConfigurationRepositoryConfig = GHC.Maybe.Nothing,
                                                                                                       restoreSnapshotConfigurationRepositoryName = GHC.Maybe.Nothing,
                                                                                                       restoreSnapshotConfigurationRestorePayload = GHC.Maybe.Nothing,
                                                                                                       restoreSnapshotConfigurationSnapshotName = restoreSnapshotConfigurationSnapshotName,
                                                                                                       restoreSnapshotConfigurationSourceClusterId = GHC.Maybe.Nothing,
                                                                                                       restoreSnapshotConfigurationStrategy = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.RestoreSnapshotConfiguration.properties.strategy@ in the specification.
-- 
-- The restore strategy to use. Defaults to a full restore. Partial restore will attempt to restore unavailable indices only
data RestoreSnapshotConfigurationStrategy =
   RestoreSnapshotConfigurationStrategyOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | RestoreSnapshotConfigurationStrategyTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | RestoreSnapshotConfigurationStrategyEnumPartial -- ^ Represents the JSON value @"partial"@
  | RestoreSnapshotConfigurationStrategyEnumFull -- ^ Represents the JSON value @"full"@
  | RestoreSnapshotConfigurationStrategyEnumRecovery -- ^ Represents the JSON value @"recovery"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON RestoreSnapshotConfigurationStrategy
    where toJSON (RestoreSnapshotConfigurationStrategyOther val) = val
          toJSON (RestoreSnapshotConfigurationStrategyTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (RestoreSnapshotConfigurationStrategyEnumPartial) = "partial"
          toJSON (RestoreSnapshotConfigurationStrategyEnumFull) = "full"
          toJSON (RestoreSnapshotConfigurationStrategyEnumRecovery) = "recovery"
instance Data.Aeson.Types.FromJSON.FromJSON RestoreSnapshotConfigurationStrategy
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "partial" -> RestoreSnapshotConfigurationStrategyEnumPartial
                                            | val GHC.Classes.== "full" -> RestoreSnapshotConfigurationStrategyEnumFull
                                            | val GHC.Classes.== "recovery" -> RestoreSnapshotConfigurationStrategyEnumRecovery
                                            | GHC.Base.otherwise -> RestoreSnapshotConfigurationStrategyOther val)
