-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema AccountTrustSettings
module Model/Private/Elasticsearch.Types.AccountTrustSettings where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias

-- | Defines the object schema located at @components.schemas.AccountTrustSettings@ in the specification.
-- 
-- Settings related to the level of trust of the clusters in this account
data AccountTrustSettings = AccountTrustSettings {
  -- | trust_all: If true, all clusters in this account will by default trust all other clusters in the same account
  accountTrustSettingsTrustAll :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON AccountTrustSettings
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["trust_all" Data.Aeson.Types.ToJSON..= accountTrustSettingsTrustAll obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["trust_all" Data.Aeson.Types.ToJSON..= accountTrustSettingsTrustAll obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON AccountTrustSettings
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "AccountTrustSettings" (\obj -> GHC.Base.pure AccountTrustSettings GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "trust_all"))
-- | Create a new 'AccountTrustSettings' with all required fields.
mkAccountTrustSettings :: GHC.Types.Bool -- ^ 'accountTrustSettingsTrustAll'
  -> AccountTrustSettings
mkAccountTrustSettings accountTrustSettingsTrustAll = AccountTrustSettings{accountTrustSettingsTrustAll = accountTrustSettingsTrustAll}
