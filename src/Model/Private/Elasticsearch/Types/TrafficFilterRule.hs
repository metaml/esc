-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TrafficFilterRule
module Model/Private/Elasticsearch.Types.TrafficFilterRule where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias
import {-# SOURCE #-} Model/Private/Elasticsearch.Types.TrafficFilterEgressRule

-- | Defines the object schema located at @components.schemas.TrafficFilterRule@ in the specification.
-- 
-- The container for a traffic filter rule.
data TrafficFilterRule = TrafficFilterRule {
  -- | azure_endpoint_guid: Resource GUID of the Azure Private Endpoint to allow connections from
  trafficFilterRuleAzureEndpointGuid :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | azure_endpoint_name: Name of the Azure Private Endpoint to allow connections from
  , trafficFilterRuleAzureEndpointName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | description: Description of the rule
  , trafficFilterRuleDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | egress_rule: The rule detail for a traffic filter egress rule.
  , trafficFilterRuleEgressRule :: (GHC.Maybe.Maybe TrafficFilterEgressRule)
  -- | id: The rule ID
  , trafficFilterRuleId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | source: Allowed traffic filter source: IP address, CIDR mask, or VPC endpoint ID
  , trafficFilterRuleSource :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TrafficFilterRule
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("azure_endpoint_guid" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleAzureEndpointGuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("azure_endpoint_name" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleAzureEndpointName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("egress_rule" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleEgressRule obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleSource obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("azure_endpoint_guid" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleAzureEndpointGuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("azure_endpoint_name" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleAzureEndpointName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("egress_rule" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleEgressRule obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source" Data.Aeson.Types.ToJSON..=)) (trafficFilterRuleSource obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON TrafficFilterRule
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "TrafficFilterRule" (\obj -> (((((GHC.Base.pure TrafficFilterRule GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "azure_endpoint_guid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "azure_endpoint_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "egress_rule")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "source"))
-- | Create a new 'TrafficFilterRule' with all required fields.
mkTrafficFilterRule :: TrafficFilterRule
mkTrafficFilterRule = TrafficFilterRule{trafficFilterRuleAzureEndpointGuid = GHC.Maybe.Nothing,
                                        trafficFilterRuleAzureEndpointName = GHC.Maybe.Nothing,
                                        trafficFilterRuleDescription = GHC.Maybe.Nothing,
                                        trafficFilterRuleEgressRule = GHC.Maybe.Nothing,
                                        trafficFilterRuleId = GHC.Maybe.Nothing,
                                        trafficFilterRuleSource = GHC.Maybe.Nothing}
