-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema CreateExtensionRequest
module Model/Private/Elasticsearch.Types.CreateExtensionRequest where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias

-- | Defines the object schema located at @components.schemas.CreateExtensionRequest@ in the specification.
-- 
-- The body of a request to create a new extension
data CreateExtensionRequest = CreateExtensionRequest {
  -- | description: The extension description.
  createExtensionRequestDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | download_url: The URL to download the extension archive.
  , createExtensionRequestDownloadUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | extension_type: The extension type.
  , createExtensionRequestExtensionType :: CreateExtensionRequestExtensionType
  -- | name: The extension name. Only ASCII alphanumeric and [_.-] characters allowed
  , createExtensionRequestName :: Data.Text.Internal.Text
  -- | version: The Elasticsearch version.
  , createExtensionRequestVersion :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON CreateExtensionRequest
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (createExtensionRequestDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("download_url" Data.Aeson.Types.ToJSON..=)) (createExtensionRequestDownloadUrl obj) : ["extension_type" Data.Aeson.Types.ToJSON..= createExtensionRequestExtensionType obj] : ["name" Data.Aeson.Types.ToJSON..= createExtensionRequestName obj] : ["version" Data.Aeson.Types.ToJSON..= createExtensionRequestVersion obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (createExtensionRequestDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("download_url" Data.Aeson.Types.ToJSON..=)) (createExtensionRequestDownloadUrl obj) : ["extension_type" Data.Aeson.Types.ToJSON..= createExtensionRequestExtensionType obj] : ["name" Data.Aeson.Types.ToJSON..= createExtensionRequestName obj] : ["version" Data.Aeson.Types.ToJSON..= createExtensionRequestVersion obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON CreateExtensionRequest
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "CreateExtensionRequest" (\obj -> ((((GHC.Base.pure CreateExtensionRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "download_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "extension_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "version"))
-- | Create a new 'CreateExtensionRequest' with all required fields.
mkCreateExtensionRequest :: CreateExtensionRequestExtensionType -- ^ 'createExtensionRequestExtensionType'
  -> Data.Text.Internal.Text -- ^ 'createExtensionRequestName'
  -> Data.Text.Internal.Text -- ^ 'createExtensionRequestVersion'
  -> CreateExtensionRequest
mkCreateExtensionRequest createExtensionRequestExtensionType createExtensionRequestName createExtensionRequestVersion = CreateExtensionRequest{createExtensionRequestDescription = GHC.Maybe.Nothing,
                                                                                                                                               createExtensionRequestDownloadUrl = GHC.Maybe.Nothing,
                                                                                                                                               createExtensionRequestExtensionType = createExtensionRequestExtensionType,
                                                                                                                                               createExtensionRequestName = createExtensionRequestName,
                                                                                                                                               createExtensionRequestVersion = createExtensionRequestVersion}
-- | Defines the enum schema located at @components.schemas.CreateExtensionRequest.properties.extension_type@ in the specification.
-- 
-- The extension type.
data CreateExtensionRequestExtensionType =
   CreateExtensionRequestExtensionTypeOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | CreateExtensionRequestExtensionTypeTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | CreateExtensionRequestExtensionTypeEnumPlugin -- ^ Represents the JSON value @"plugin"@
  | CreateExtensionRequestExtensionTypeEnumBundle -- ^ Represents the JSON value @"bundle"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON CreateExtensionRequestExtensionType
    where toJSON (CreateExtensionRequestExtensionTypeOther val) = val
          toJSON (CreateExtensionRequestExtensionTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (CreateExtensionRequestExtensionTypeEnumPlugin) = "plugin"
          toJSON (CreateExtensionRequestExtensionTypeEnumBundle) = "bundle"
instance Data.Aeson.Types.FromJSON.FromJSON CreateExtensionRequestExtensionType
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "plugin" -> CreateExtensionRequestExtensionTypeEnumPlugin
                                            | val GHC.Classes.== "bundle" -> CreateExtensionRequestExtensionTypeEnumBundle
                                            | GHC.Base.otherwise -> CreateExtensionRequestExtensionTypeOther val)
