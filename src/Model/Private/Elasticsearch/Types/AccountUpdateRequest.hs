-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema AccountUpdateRequest
module Model/Private/Elasticsearch.Types.AccountUpdateRequest where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias
import {-# SOURCE #-} Model/Private/Elasticsearch.Types.AccountTrustSettings

-- | Defines the object schema located at @components.schemas.AccountUpdateRequest@ in the specification.
-- 
-- A request to update an account
data AccountUpdateRequest = AccountUpdateRequest {
  -- | trust: Settings related to the level of trust of the clusters in this account
  accountUpdateRequestTrust :: (GHC.Maybe.Maybe AccountTrustSettings)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON AccountUpdateRequest
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trust" Data.Aeson.Types.ToJSON..=)) (accountUpdateRequestTrust obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trust" Data.Aeson.Types.ToJSON..=)) (accountUpdateRequestTrust obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON AccountUpdateRequest
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "AccountUpdateRequest" (\obj -> GHC.Base.pure AccountUpdateRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "trust"))
-- | Create a new 'AccountUpdateRequest' with all required fields.
mkAccountUpdateRequest :: AccountUpdateRequest
mkAccountUpdateRequest = AccountUpdateRequest{accountUpdateRequestTrust = GHC.Maybe.Nothing}
