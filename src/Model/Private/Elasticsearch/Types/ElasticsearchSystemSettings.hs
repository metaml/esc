-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ElasticsearchSystemSettings
module Model/Private/Elasticsearch.Types.ElasticsearchSystemSettings where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias
import {-# SOURCE #-} Model/Private/Elasticsearch.Types.ElasticsearchScriptingUserSettings

-- | Defines the object schema located at @components.schemas.ElasticsearchSystemSettings@ in the specification.
-- 
-- A subset of Elasticsearch settings. TIP: To define the complete set of Elasticsearch settings, use \`ElasticsearchSystemSettings\` with \`user_settings_override*\` and \`user_settings*\`.
data ElasticsearchSystemSettings = ElasticsearchSystemSettings {
  -- | auto_create_index: If true (the default), then any write operation on an index that does not currently exist will create it. NOTES: (Corresponds to the parameter \'action.auto_create_index\')
  elasticsearchSystemSettingsAutoCreateIndex :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | default_shards_per_index: (2.x only - to get the same result in 5.x template mappings must be used) Sets the default number of shards per index, defaulting to 1 if not specified. (Corresponds to the parameter \'index.number_of_shards\' in 2.x, not supported in 5.x)
  , elasticsearchSystemSettingsDefaultShardsPerIndex :: (GHC.Maybe.Maybe GHC.Int.Int32)
  -- | destructive_requires_name: If true (default is false) then the index deletion API will not support wildcards or \'_all\'. NOTES: (Corresponds to the parameter \'action.destructive_requires_name\')
  , elasticsearchSystemSettingsDestructiveRequiresName :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | enable_close_index: Defaults to false on versions \<= 7.2.0, true otherwise. If false, then the API commands to close indices are disabled. This is important because Elasticsearch does not snapshot or migrate close indices on versions under 7.2.0, therefore standard Elastic Cloud configuration operations will cause irretrievable loss of indices\' data. NOTES: (Corresponds to the parameter \'cluster.indices.close.enable\')
  , elasticsearchSystemSettingsEnableCloseIndex :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | monitoring_collection_interval: The default interval at which monitoring information from the cluster if collected, if monitoring is enabled. NOTES: (Corresponds to the parameter \'marvel.agent.interval\' in 2.x and \'xpack.monitoring.collection.interval\' in 5.x)
  , elasticsearchSystemSettingsMonitoringCollectionInterval :: (GHC.Maybe.Maybe GHC.Int.Int32)
  -- | monitoring_history_duration: The duration for which monitoring history is stored (format \'(NUMBER)d\' eg \'3d\' for 3 days). NOTES: (\'Corresponds to the parameter xpack.monitoring.history.duration\' in 5.x, defaults to \'7d\')
  , elasticsearchSystemSettingsMonitoringHistoryDuration :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | reindex_whitelist: Limits remote Elasticsearch clusters that can be used as the source for \'_reindex\' API commands
  , elasticsearchSystemSettingsReindexWhitelist :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | scripting: Controls the languages supported by the Elasticsearch cluster, such as Painless, Mustache, and Expressions. Controls how the languages are used, such as file, index, and inline. TIP: For complex configurations, leave these blank and configure these settings in the user YAML or JSON.
  , elasticsearchSystemSettingsScripting :: (GHC.Maybe.Maybe ElasticsearchScriptingUserSettings)
  -- | use_disk_threshold: DEPRECATED: Use setting \'cluster.routing.allocation.disk.threshold_enabled\' in the Elasticsearch API. This value no longer has any effect in this API.
  , elasticsearchSystemSettingsUseDiskThreshold :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | watcher_trigger_engine: The trigger engine for Watcher, defaults to \'scheduler\' - see the xpack documentation for more information. NOTES: (Corresponds to the parameter \'(xpack.)watcher.trigger.schedule.engine\', depending on version. Ignored from 6.x onwards.)
  , elasticsearchSystemSettingsWatcherTriggerEngine :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ElasticsearchSystemSettings
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auto_create_index" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsAutoCreateIndex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_shards_per_index" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsDefaultShardsPerIndex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destructive_requires_name" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsDestructiveRequiresName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enable_close_index" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsEnableCloseIndex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monitoring_collection_interval" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsMonitoringCollectionInterval obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monitoring_history_duration" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsMonitoringHistoryDuration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reindex_whitelist" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsReindexWhitelist obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("scripting" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsScripting obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_disk_threshold" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsUseDiskThreshold obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("watcher_trigger_engine" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsWatcherTriggerEngine obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auto_create_index" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsAutoCreateIndex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_shards_per_index" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsDefaultShardsPerIndex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destructive_requires_name" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsDestructiveRequiresName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enable_close_index" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsEnableCloseIndex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monitoring_collection_interval" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsMonitoringCollectionInterval obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monitoring_history_duration" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsMonitoringHistoryDuration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reindex_whitelist" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsReindexWhitelist obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("scripting" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsScripting obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_disk_threshold" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsUseDiskThreshold obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("watcher_trigger_engine" Data.Aeson.Types.ToJSON..=)) (elasticsearchSystemSettingsWatcherTriggerEngine obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON ElasticsearchSystemSettings
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ElasticsearchSystemSettings" (\obj -> (((((((((GHC.Base.pure ElasticsearchSystemSettings GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "auto_create_index")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_shards_per_index")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destructive_requires_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enable_close_index")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "monitoring_collection_interval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "monitoring_history_duration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reindex_whitelist")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "scripting")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "use_disk_threshold")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "watcher_trigger_engine"))
-- | Create a new 'ElasticsearchSystemSettings' with all required fields.
mkElasticsearchSystemSettings :: ElasticsearchSystemSettings
mkElasticsearchSystemSettings = ElasticsearchSystemSettings{elasticsearchSystemSettingsAutoCreateIndex = GHC.Maybe.Nothing,
                                                            elasticsearchSystemSettingsDefaultShardsPerIndex = GHC.Maybe.Nothing,
                                                            elasticsearchSystemSettingsDestructiveRequiresName = GHC.Maybe.Nothing,
                                                            elasticsearchSystemSettingsEnableCloseIndex = GHC.Maybe.Nothing,
                                                            elasticsearchSystemSettingsMonitoringCollectionInterval = GHC.Maybe.Nothing,
                                                            elasticsearchSystemSettingsMonitoringHistoryDuration = GHC.Maybe.Nothing,
                                                            elasticsearchSystemSettingsReindexWhitelist = GHC.Maybe.Nothing,
                                                            elasticsearchSystemSettingsScripting = GHC.Maybe.Nothing,
                                                            elasticsearchSystemSettingsUseDiskThreshold = GHC.Maybe.Nothing,
                                                            elasticsearchSystemSettingsWatcherTriggerEngine = GHC.Maybe.Nothing}
