-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema AbsoluteRefId
module Model/Private/Elasticsearch.Types.AbsoluteRefId where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias

-- | Defines the object schema located at @components.schemas.AbsoluteRefId@ in the specification.
-- 
-- A reference to a specific resource of a deployment
data AbsoluteRefId = AbsoluteRefId {
  -- | deployment_id: The deployment id
  absoluteRefIdDeploymentId :: Data.Text.Internal.Text
  -- | ref_id: The reference id of the resource in the given deployment
  , absoluteRefIdRefId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON AbsoluteRefId
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["deployment_id" Data.Aeson.Types.ToJSON..= absoluteRefIdDeploymentId obj] : ["ref_id" Data.Aeson.Types.ToJSON..= absoluteRefIdRefId obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["deployment_id" Data.Aeson.Types.ToJSON..= absoluteRefIdDeploymentId obj] : ["ref_id" Data.Aeson.Types.ToJSON..= absoluteRefIdRefId obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON AbsoluteRefId
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "AbsoluteRefId" (\obj -> (GHC.Base.pure AbsoluteRefId GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "deployment_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ref_id"))
-- | Create a new 'AbsoluteRefId' with all required fields.
mkAbsoluteRefId :: Data.Text.Internal.Text -- ^ 'absoluteRefIdDeploymentId'
  -> Data.Text.Internal.Text -- ^ 'absoluteRefIdRefId'
  -> AbsoluteRefId
mkAbsoluteRefId absoluteRefIdDeploymentId absoluteRefIdRefId = AbsoluteRefId{absoluteRefIdDeploymentId = absoluteRefIdDeploymentId,
                                                                             absoluteRefIdRefId = absoluteRefIdRefId}
