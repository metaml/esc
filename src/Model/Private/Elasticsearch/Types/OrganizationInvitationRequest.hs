-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema OrganizationInvitationRequest
module Model/Private/Elasticsearch.Types.OrganizationInvitationRequest where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias

-- | Defines the object schema located at @components.schemas.OrganizationInvitationRequest@ in the specification.
-- 
-- A request to create one or more invitations to an organization
data OrganizationInvitationRequest = OrganizationInvitationRequest {
  -- | emails: The email addresses to invite to the organization
  organizationInvitationRequestEmails :: ([Data.Text.Internal.Text])
  -- | expires_in: The date and time when the invitation expires. Defaults to three days from now.
  , organizationInvitationRequestExpiresIn :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrganizationInvitationRequest
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["emails" Data.Aeson.Types.ToJSON..= organizationInvitationRequestEmails obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_in" Data.Aeson.Types.ToJSON..=)) (organizationInvitationRequestExpiresIn obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["emails" Data.Aeson.Types.ToJSON..= organizationInvitationRequestEmails obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_in" Data.Aeson.Types.ToJSON..=)) (organizationInvitationRequestExpiresIn obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON OrganizationInvitationRequest
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "OrganizationInvitationRequest" (\obj -> (GHC.Base.pure OrganizationInvitationRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "emails")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expires_in"))
-- | Create a new 'OrganizationInvitationRequest' with all required fields.
mkOrganizationInvitationRequest :: [Data.Text.Internal.Text] -- ^ 'organizationInvitationRequestEmails'
  -> OrganizationInvitationRequest
mkOrganizationInvitationRequest organizationInvitationRequestEmails = OrganizationInvitationRequest{organizationInvitationRequestEmails = organizationInvitationRequestEmails,
                                                                                                    organizationInvitationRequestExpiresIn = GHC.Maybe.Nothing}
