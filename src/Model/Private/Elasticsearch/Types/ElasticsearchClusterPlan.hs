-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ElasticsearchClusterPlan
module Model/Private/Elasticsearch.Types.ElasticsearchClusterPlan where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias
import {-# SOURCE #-} Model/Private/Elasticsearch.Types.DeploymentTemplateReference
import {-# SOURCE #-} Model/Private/Elasticsearch.Types.ElasticsearchClusterTopologyElement
import {-# SOURCE #-} Model/Private/Elasticsearch.Types.ElasticsearchConfiguration
import {-# SOURCE #-} Model/Private/Elasticsearch.Types.TransientElasticsearchPlanConfiguration

-- | Defines the object schema located at @components.schemas.ElasticsearchClusterPlan@ in the specification.
-- 
-- The plan for the Elasticsearch cluster.
data ElasticsearchClusterPlan = ElasticsearchClusterPlan {
  -- | autoscaling_enabled: Enable autoscaling for this Elasticsearch cluster.
  elasticsearchClusterPlanAutoscalingEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | cluster_topology
  , elasticsearchClusterPlanClusterTopology :: ([ElasticsearchClusterTopologyElement])
  -- | deployment_template: Specifies the deployment template used to create the plan.
  , elasticsearchClusterPlanDeploymentTemplate :: (GHC.Maybe.Maybe DeploymentTemplateReference)
  -- | elasticsearch: The Elasticsearch cluster settings. When specified at the top level, provides a field-by-field default. When specified at the topology level, provides the override settings.
  , elasticsearchClusterPlanElasticsearch :: ElasticsearchConfiguration
  -- | transient: Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and Elasticsearch settings.
  , elasticsearchClusterPlanTransient :: (GHC.Maybe.Maybe TransientElasticsearchPlanConfiguration)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ElasticsearchClusterPlan
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("autoscaling_enabled" Data.Aeson.Types.ToJSON..=)) (elasticsearchClusterPlanAutoscalingEnabled obj) : ["cluster_topology" Data.Aeson.Types.ToJSON..= elasticsearchClusterPlanClusterTopology obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deployment_template" Data.Aeson.Types.ToJSON..=)) (elasticsearchClusterPlanDeploymentTemplate obj) : ["elasticsearch" Data.Aeson.Types.ToJSON..= elasticsearchClusterPlanElasticsearch obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transient" Data.Aeson.Types.ToJSON..=)) (elasticsearchClusterPlanTransient obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("autoscaling_enabled" Data.Aeson.Types.ToJSON..=)) (elasticsearchClusterPlanAutoscalingEnabled obj) : ["cluster_topology" Data.Aeson.Types.ToJSON..= elasticsearchClusterPlanClusterTopology obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deployment_template" Data.Aeson.Types.ToJSON..=)) (elasticsearchClusterPlanDeploymentTemplate obj) : ["elasticsearch" Data.Aeson.Types.ToJSON..= elasticsearchClusterPlanElasticsearch obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transient" Data.Aeson.Types.ToJSON..=)) (elasticsearchClusterPlanTransient obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON ElasticsearchClusterPlan
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ElasticsearchClusterPlan" (\obj -> ((((GHC.Base.pure ElasticsearchClusterPlan GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "autoscaling_enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cluster_topology")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "deployment_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "elasticsearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transient"))
-- | Create a new 'ElasticsearchClusterPlan' with all required fields.
mkElasticsearchClusterPlan :: [ElasticsearchClusterTopologyElement] -- ^ 'elasticsearchClusterPlanClusterTopology'
  -> ElasticsearchConfiguration -- ^ 'elasticsearchClusterPlanElasticsearch'
  -> ElasticsearchClusterPlan
mkElasticsearchClusterPlan elasticsearchClusterPlanClusterTopology elasticsearchClusterPlanElasticsearch = ElasticsearchClusterPlan{elasticsearchClusterPlanAutoscalingEnabled = GHC.Maybe.Nothing,
                                                                                                                                    elasticsearchClusterPlanClusterTopology = elasticsearchClusterPlanClusterTopology,
                                                                                                                                    elasticsearchClusterPlanDeploymentTemplate = GHC.Maybe.Nothing,
                                                                                                                                    elasticsearchClusterPlanElasticsearch = elasticsearchClusterPlanElasticsearch,
                                                                                                                                    elasticsearchClusterPlanTransient = GHC.Maybe.Nothing}
