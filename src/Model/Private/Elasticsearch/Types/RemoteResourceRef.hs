-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema RemoteResourceRef
module Model/Private/Elasticsearch.Types.RemoteResourceRef where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias
import {-# SOURCE #-} Model/Private/Elasticsearch.Types.RemoteResourceInfo

-- | Defines the object schema located at @components.schemas.RemoteResourceRef@ in the specification.
-- 
-- The Elasticsearch resource used as a Remote Cluster.
data RemoteResourceRef = RemoteResourceRef {
  -- | alias: The alias for this remote cluster. Aliases must only contain letters, digits, dashes and underscores
  remoteResourceRefAlias :: Data.Text.Internal.Text
  -- | deployment_id: The id of the deployment
  , remoteResourceRefDeploymentId :: Data.Text.Internal.Text
  -- | elasticsearch_ref_id: The locally-unique user-specified id of an Elasticsearch Resource
  , remoteResourceRefElasticsearchRefId :: Data.Text.Internal.Text
  -- | info: Information about a Remote Cluster.
  , remoteResourceRefInfo :: (GHC.Maybe.Maybe RemoteResourceInfo)
  -- | skip_unavailable: If true, skip this cluster during search if it is disconnected. Default: false
  , remoteResourceRefSkipUnavailable :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON RemoteResourceRef
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["alias" Data.Aeson.Types.ToJSON..= remoteResourceRefAlias obj] : ["deployment_id" Data.Aeson.Types.ToJSON..= remoteResourceRefDeploymentId obj] : ["elasticsearch_ref_id" Data.Aeson.Types.ToJSON..= remoteResourceRefElasticsearchRefId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("info" Data.Aeson.Types.ToJSON..=)) (remoteResourceRefInfo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("skip_unavailable" Data.Aeson.Types.ToJSON..=)) (remoteResourceRefSkipUnavailable obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["alias" Data.Aeson.Types.ToJSON..= remoteResourceRefAlias obj] : ["deployment_id" Data.Aeson.Types.ToJSON..= remoteResourceRefDeploymentId obj] : ["elasticsearch_ref_id" Data.Aeson.Types.ToJSON..= remoteResourceRefElasticsearchRefId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("info" Data.Aeson.Types.ToJSON..=)) (remoteResourceRefInfo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("skip_unavailable" Data.Aeson.Types.ToJSON..=)) (remoteResourceRefSkipUnavailable obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON RemoteResourceRef
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "RemoteResourceRef" (\obj -> ((((GHC.Base.pure RemoteResourceRef GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "alias")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "deployment_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "elasticsearch_ref_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "info")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "skip_unavailable"))
-- | Create a new 'RemoteResourceRef' with all required fields.
mkRemoteResourceRef :: Data.Text.Internal.Text -- ^ 'remoteResourceRefAlias'
  -> Data.Text.Internal.Text -- ^ 'remoteResourceRefDeploymentId'
  -> Data.Text.Internal.Text -- ^ 'remoteResourceRefElasticsearchRefId'
  -> RemoteResourceRef
mkRemoteResourceRef remoteResourceRefAlias remoteResourceRefDeploymentId remoteResourceRefElasticsearchRefId = RemoteResourceRef{remoteResourceRefAlias = remoteResourceRefAlias,
                                                                                                                                 remoteResourceRefDeploymentId = remoteResourceRefDeploymentId,
                                                                                                                                 remoteResourceRefElasticsearchRefId = remoteResourceRefElasticsearchRefId,
                                                                                                                                 remoteResourceRefInfo = GHC.Maybe.Nothing,
                                                                                                                                 remoteResourceRefSkipUnavailable = GHC.Maybe.Nothing}
