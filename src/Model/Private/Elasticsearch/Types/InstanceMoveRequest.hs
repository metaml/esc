-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema InstanceMoveRequest
module Model/Private/Elasticsearch.Types.InstanceMoveRequest where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.TypeAlias

-- | Defines the object schema located at @components.schemas.InstanceMoveRequest@ in the specification.
-- 
-- The request that specifies the Elasticsearch instances, Kibana instances, and APM Servers to move to allocators as part of the upgrade plan.
data InstanceMoveRequest = InstanceMoveRequest {
  -- | from: The instance id that is going to be moved
  instanceMoveRequestFrom :: Data.Text.Internal.Text
  -- | instance_down: Tells the infrastructure that the instance should be considered as permanently down when deciding how to migrate data to new nodes. If left blank then the system will automatically decide (currently: will treat the instances as up)
  , instanceMoveRequestInstanceDown :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | to: An optional list of allocator ids to which the instance should be moved. If not specified then any available allocator can be used (including the current one if it is healthy)
  , instanceMoveRequestTo :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InstanceMoveRequest
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["from" Data.Aeson.Types.ToJSON..= instanceMoveRequestFrom obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("instance_down" Data.Aeson.Types.ToJSON..=)) (instanceMoveRequestInstanceDown obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("to" Data.Aeson.Types.ToJSON..=)) (instanceMoveRequestTo obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["from" Data.Aeson.Types.ToJSON..= instanceMoveRequestFrom obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("instance_down" Data.Aeson.Types.ToJSON..=)) (instanceMoveRequestInstanceDown obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("to" Data.Aeson.Types.ToJSON..=)) (instanceMoveRequestTo obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InstanceMoveRequest
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InstanceMoveRequest" (\obj -> ((GHC.Base.pure InstanceMoveRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "from")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "instance_down")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "to"))
-- | Create a new 'InstanceMoveRequest' with all required fields.
mkInstanceMoveRequest :: Data.Text.Internal.Text -- ^ 'instanceMoveRequestFrom'
  -> InstanceMoveRequest
mkInstanceMoveRequest instanceMoveRequestFrom = InstanceMoveRequest{instanceMoveRequestFrom = instanceMoveRequestFrom,
                                                                    instanceMoveRequestInstanceDown = GHC.Maybe.Nothing,
                                                                    instanceMoveRequestTo = GHC.Maybe.Nothing}
