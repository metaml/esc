-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation createDeployment
module Model/Private/Elasticsearch.Operations.CreateDeployment where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.Types

-- | > POST /deployments
-- 
-- Creates a Deployment.
createDeployment :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => CreateDeploymentParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> DeploymentCreateRequest -- ^ The request body to send
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response CreateDeploymentResponse) -- ^ Monadic computation which returns the result of the operation
createDeployment parameters
                 body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either CreateDeploymentResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right CreateDeploymentResponse200
                                                                                                                                                                   | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right CreateDeploymentResponse201
                                                                                                                                                                   | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 202) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right CreateDeploymentResponse202
                                                                                                                                                                   | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right CreateDeploymentResponse400
                                                                                                                                                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right CreateDeploymentResponse401
                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Model/Private/Elasticsearch.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/deployments") [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "request_id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryRequestId parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                        Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "validate_only") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryValidateOnly parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                        Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "template_id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryTemplateId parameters) (Data.Text.pack "form") GHC.Types.False] (GHC.Maybe.Just body) Model/Private/Elasticsearch.Common.RequestBodyEncodingJSON)
-- | Defines the object schema located at @paths.\/deployments.POST.parameters@ in the specification.
-- 
-- 
data CreateDeploymentParameters = CreateDeploymentParameters {
  -- | queryRequest_id: Represents the parameter named \'request_id\'
  -- 
  -- An optional idempotency token - if two create requests share the same request_id token (min size 32 characters, max 128) then only one deployment will be created, the second request will return the info of that deployment (in the same format described below, but with blanks for auth-related fields)
  createDeploymentParametersQueryRequestId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryTemplate_id: Represents the parameter named \'template_id\'
  -- 
  -- An optional template id - if present, the referenced template will be used to fill in the resources field of the deployment creation request. If any resources are present in the request together with the template, the ones coming in the request will prevail and no merging with the template will be performed.
  , createDeploymentParametersQueryTemplateId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryValidate_only: Represents the parameter named \'validate_only\'
  -- 
  -- If true, will just validate the Deployment definition but will not perform the creation
  , createDeploymentParametersQueryValidateOnly :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON CreateDeploymentParameters
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRequest_id" Data.Aeson.Types.ToJSON..=)) (createDeploymentParametersQueryRequestId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTemplate_id" Data.Aeson.Types.ToJSON..=)) (createDeploymentParametersQueryTemplateId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryValidate_only" Data.Aeson.Types.ToJSON..=)) (createDeploymentParametersQueryValidateOnly obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRequest_id" Data.Aeson.Types.ToJSON..=)) (createDeploymentParametersQueryRequestId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTemplate_id" Data.Aeson.Types.ToJSON..=)) (createDeploymentParametersQueryTemplateId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryValidate_only" Data.Aeson.Types.ToJSON..=)) (createDeploymentParametersQueryValidateOnly obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON CreateDeploymentParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "CreateDeploymentParameters" (\obj -> ((GHC.Base.pure CreateDeploymentParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRequest_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTemplate_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryValidate_only"))
-- | Create a new 'CreateDeploymentParameters' with all required fields.
mkCreateDeploymentParameters :: CreateDeploymentParameters
mkCreateDeploymentParameters = CreateDeploymentParameters{createDeploymentParametersQueryRequestId = GHC.Maybe.Nothing,
                                                          createDeploymentParametersQueryTemplateId = GHC.Maybe.Nothing,
                                                          createDeploymentParametersQueryValidateOnly = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'createDeployment'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'CreateDeploymentResponseError' is used.
data CreateDeploymentResponse =
   CreateDeploymentResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | CreateDeploymentResponse200 -- ^ The request was valid (used when validate_only is true).
  | CreateDeploymentResponse201 -- ^ The request was valid and a new deployment was created
  | CreateDeploymentResponse202 -- ^ The request was valid and deployment creation had already been started.
  | CreateDeploymentResponse400 -- ^ The deployment request had errors.
  | CreateDeploymentResponse401 -- ^ You are not authorized to perform this action.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | > POST /deployments
-- 
-- The same as 'createDeployment' but accepts an explicit configuration.
createDeploymentWithConfiguration :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> CreateDeploymentParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> DeploymentCreateRequest -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response CreateDeploymentResponse) -- ^ Monadic computation which returns the result of the operation
createDeploymentWithConfiguration config
                                  parameters
                                  body = GHC.Base.fmap (\response_6 -> GHC.Base.fmap (Data.Either.either CreateDeploymentResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right CreateDeploymentResponse200
                                                                                                                                                                                    | (\status_8 -> Network.HTTP.Types.Status.statusCode status_8 GHC.Classes.== 201) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right CreateDeploymentResponse201
                                                                                                                                                                                    | (\status_9 -> Network.HTTP.Types.Status.statusCode status_9 GHC.Classes.== 202) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right CreateDeploymentResponse202
                                                                                                                                                                                    | (\status_10 -> Network.HTTP.Types.Status.statusCode status_10 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right CreateDeploymentResponse400
                                                                                                                                                                                    | (\status_11 -> Network.HTTP.Types.Status.statusCode status_11 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right CreateDeploymentResponse401
                                                                                                                                                                                    | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_6) response_6) (Model/Private/Elasticsearch.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/deployments") [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "request_id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryRequestId parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                               Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "validate_only") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryValidateOnly parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                               Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "template_id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryTemplateId parameters) (Data.Text.pack "form") GHC.Types.False] (GHC.Maybe.Just body) Model/Private/Elasticsearch.Common.RequestBodyEncodingJSON)
-- | > POST /deployments
-- 
-- The same as 'createDeployment' but returns the raw 'Data.ByteString.Char8.ByteString'.
createDeploymentRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => CreateDeploymentParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> DeploymentCreateRequest -- ^ The request body to send
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
createDeploymentRaw parameters
                    body = GHC.Base.id (Model/Private/Elasticsearch.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/deployments") [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "request_id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryRequestId parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                          Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "validate_only") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryValidateOnly parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                          Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "template_id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryTemplateId parameters) (Data.Text.pack "form") GHC.Types.False] (GHC.Maybe.Just body) Model/Private/Elasticsearch.Common.RequestBodyEncodingJSON)
-- | > POST /deployments
-- 
-- The same as 'createDeployment' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
createDeploymentWithConfigurationRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> CreateDeploymentParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> DeploymentCreateRequest -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
createDeploymentWithConfigurationRaw config
                                     parameters
                                     body = GHC.Base.id (Model/Private/Elasticsearch.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/deployments") [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "request_id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryRequestId parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                 Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "validate_only") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryValidateOnly parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                 Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "template_id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> createDeploymentParametersQueryTemplateId parameters) (Data.Text.pack "form") GHC.Types.False] (GHC.Maybe.Just body) Model/Private/Elasticsearch.Common.RequestBodyEncodingJSON)
