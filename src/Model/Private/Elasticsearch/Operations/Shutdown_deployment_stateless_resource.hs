-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation shutdown_deployment_stateless_resource
module Model/Private/Elasticsearch.Operations.Shutdown_deployment_stateless_resource where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.Types

-- | > POST /deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_shutdown
-- 
-- Shut down Stateless Resource belonging to a given Deployment.
-- Kibana cannot be shut down on Elasticsearch Service as it is required for Elasticsearch administrative functions, such as Snapshot Lifecycle Management and version upgrades.
shutdown_deployment_stateless_resource :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Shutdown_deployment_stateless_resourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response Shutdown_deployment_stateless_resourceResponse) -- ^ Monadic computation which returns the result of the operation
shutdown_deployment_stateless_resource parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Shutdown_deployment_stateless_resourceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_stateless_resourceResponse200
                                                                                                                                                                                                                     | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_stateless_resourceResponse400
                                                                                                                                                                                                                     | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_stateless_resourceResponse404
                                                                                                                                                                                                                     | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 449) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_stateless_resourceResponse449
                                                                                                                                                                                                                     | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 500) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_stateless_resourceResponse500
                                                                                                                                                                                                                     | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Model/Private/Elasticsearch.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathDeployment_id parameters))) GHC.Base.++ ("/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind parameters))) GHC.Base.++ ("/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathRef_id parameters))) GHC.Base.++ "/_shutdown"))))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "hide") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_stateless_resourceParametersQueryHide parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_stateless_resourceParametersQuerySkip_snapshot parameters) (Data.Text.pack "form") GHC.Types.False])
-- | Defines the object schema located at @paths.\/deployments\/{deployment_id}\/{stateless_resource_kind}\/{ref_id}\/_shutdown.POST.parameters@ in the specification.
-- 
-- 
data Shutdown_deployment_stateless_resourceParameters = Shutdown_deployment_stateless_resourceParameters {
  -- | pathDeployment_id: Represents the parameter named \'deployment_id\'
  -- 
  -- Identifier for the Deployment.
  shutdown_deployment_stateless_resourceParametersPathDeployment_id :: Data.Text.Internal.Text
  -- | pathRef_id: Represents the parameter named \'ref_id\'
  -- 
  -- User-specified RefId for the Resource.
  , shutdown_deployment_stateless_resourceParametersPathRef_id :: Data.Text.Internal.Text
  -- | pathStateless_resource_kind: Represents the parameter named \'stateless_resource_kind\'
  -- 
  -- The kind of stateless resource
  , shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind :: Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind
  -- | queryHide: Represents the parameter named \'hide\'
  -- 
  -- Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators.
  , shutdown_deployment_stateless_resourceParametersQueryHide :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | querySkip_snapshot: Represents the parameter named \'skip_snapshot\'
  -- 
  -- If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible)
  , shutdown_deployment_stateless_resourceParametersQuerySkip_snapshot :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Shutdown_deployment_stateless_resourceParameters
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathDeployment_id" Data.Aeson.Types.ToJSON..= shutdown_deployment_stateless_resourceParametersPathDeployment_id obj] : ["pathRef_id" Data.Aeson.Types.ToJSON..= shutdown_deployment_stateless_resourceParametersPathRef_id obj] : ["pathStateless_resource_kind" Data.Aeson.Types.ToJSON..= shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryHide" Data.Aeson.Types.ToJSON..=)) (shutdown_deployment_stateless_resourceParametersQueryHide obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySkip_snapshot" Data.Aeson.Types.ToJSON..=)) (shutdown_deployment_stateless_resourceParametersQuerySkip_snapshot obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathDeployment_id" Data.Aeson.Types.ToJSON..= shutdown_deployment_stateless_resourceParametersPathDeployment_id obj] : ["pathRef_id" Data.Aeson.Types.ToJSON..= shutdown_deployment_stateless_resourceParametersPathRef_id obj] : ["pathStateless_resource_kind" Data.Aeson.Types.ToJSON..= shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryHide" Data.Aeson.Types.ToJSON..=)) (shutdown_deployment_stateless_resourceParametersQueryHide obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySkip_snapshot" Data.Aeson.Types.ToJSON..=)) (shutdown_deployment_stateless_resourceParametersQuerySkip_snapshot obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Shutdown_deployment_stateless_resourceParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Shutdown_deployment_stateless_resourceParameters" (\obj -> ((((GHC.Base.pure Shutdown_deployment_stateless_resourceParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathDeployment_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathRef_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathStateless_resource_kind")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryHide")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySkip_snapshot"))
-- | Create a new 'Shutdown_deployment_stateless_resourceParameters' with all required fields.
mkShutdown_deployment_stateless_resourceParameters :: Data.Text.Internal.Text -- ^ 'shutdown_deployment_stateless_resourceParametersPathDeployment_id'
  -> Data.Text.Internal.Text -- ^ 'shutdown_deployment_stateless_resourceParametersPathRef_id'
  -> Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind -- ^ 'shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind'
  -> Shutdown_deployment_stateless_resourceParameters
mkShutdown_deployment_stateless_resourceParameters shutdown_deployment_stateless_resourceParametersPathDeployment_id shutdown_deployment_stateless_resourceParametersPathRef_id shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind = Shutdown_deployment_stateless_resourceParameters{shutdown_deployment_stateless_resourceParametersPathDeployment_id = shutdown_deployment_stateless_resourceParametersPathDeployment_id,
                                                                                                                                                                                                                                                                                                               shutdown_deployment_stateless_resourceParametersPathRef_id = shutdown_deployment_stateless_resourceParametersPathRef_id,
                                                                                                                                                                                                                                                                                                               shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind = shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind,
                                                                                                                                                                                                                                                                                                               shutdown_deployment_stateless_resourceParametersQueryHide = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                               shutdown_deployment_stateless_resourceParametersQuerySkip_snapshot = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/deployments\/{deployment_id}\/{stateless_resource_kind}\/{ref_id}\/_shutdown.POST.parameters.properties.pathStateless_resource_kind@ in the specification.
-- 
-- Represents the parameter named \'stateless_resource_kind\'
-- 
-- The kind of stateless resource
data Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind =
   Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumKibana -- ^ Represents the JSON value @"kibana"@
  | Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumApm -- ^ Represents the JSON value @"apm"@
  | Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumAppsearch -- ^ Represents the JSON value @"appsearch"@
  | Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumEnterprise_search -- ^ Represents the JSON value @"enterprise_search"@
  | Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumIntegrations_server -- ^ Represents the JSON value @"integrations_server"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind
    where toJSON (Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindOther val) = val
          toJSON (Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumKibana) = "kibana"
          toJSON (Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumApm) = "apm"
          toJSON (Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumAppsearch) = "appsearch"
          toJSON (Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumEnterprise_search) = "enterprise_search"
          toJSON (Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumIntegrations_server) = "integrations_server"
instance Data.Aeson.Types.FromJSON.FromJSON Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "kibana" -> Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumKibana
                                            | val GHC.Classes.== "apm" -> Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumApm
                                            | val GHC.Classes.== "appsearch" -> Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumAppsearch
                                            | val GHC.Classes.== "enterprise_search" -> Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumEnterprise_search
                                            | val GHC.Classes.== "integrations_server" -> Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindEnumIntegrations_server
                                            | GHC.Base.otherwise -> Shutdown_deployment_stateless_resourceParametersPathStateless_resource_kindOther val)
-- | Represents a response of the operation 'shutdown_deployment_stateless_resource'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Shutdown_deployment_stateless_resourceResponseError' is used.
data Shutdown_deployment_stateless_resourceResponse =
   Shutdown_deployment_stateless_resourceResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Shutdown_deployment_stateless_resourceResponse200 -- ^ Standard response
  | Shutdown_deployment_stateless_resourceResponse400 -- ^ Parameter is restricted and can only be set by a Platform administrator. (code: \`deployments.restricted_parameter\`)
  | Shutdown_deployment_stateless_resourceResponse404 -- ^ * The Deployment specified by {deployment_id} cannot be found. (code: \`deployments.deployment_not_found\`) * The Resource specified by {ref_id} cannot be found. (code: \`deployments.deployment_resource_not_found\`)
  | Shutdown_deployment_stateless_resourceResponse449 -- ^ Elevated permissions are required. (code: \`root.unauthorized.rbac.elevated_permissions_required\`)
  | Shutdown_deployment_stateless_resourceResponse500 -- ^ We have failed you. (code: \`deployments.deployment_resource_no_longer_exists\`)
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | > POST /deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_shutdown
-- 
-- The same as 'shutdown_deployment_stateless_resource' but accepts an explicit configuration.
shutdown_deployment_stateless_resourceWithConfiguration :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> Shutdown_deployment_stateless_resourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Shutdown_deployment_stateless_resourceResponse) -- ^ Monadic computation which returns the result of the operation
shutdown_deployment_stateless_resourceWithConfiguration config
                                                        parameters = GHC.Base.fmap (\response_6 -> GHC.Base.fmap (Data.Either.either Shutdown_deployment_stateless_resourceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_stateless_resourceResponse200
                                                                                                                                                                                                                                      | (\status_8 -> Network.HTTP.Types.Status.statusCode status_8 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_stateless_resourceResponse400
                                                                                                                                                                                                                                      | (\status_9 -> Network.HTTP.Types.Status.statusCode status_9 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_stateless_resourceResponse404
                                                                                                                                                                                                                                      | (\status_10 -> Network.HTTP.Types.Status.statusCode status_10 GHC.Classes.== 449) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_stateless_resourceResponse449
                                                                                                                                                                                                                                      | (\status_11 -> Network.HTTP.Types.Status.statusCode status_11 GHC.Classes.== 500) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_stateless_resourceResponse500
                                                                                                                                                                                                                                      | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_6) response_6) (Model/Private/Elasticsearch.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathDeployment_id parameters))) GHC.Base.++ ("/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind parameters))) GHC.Base.++ ("/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathRef_id parameters))) GHC.Base.++ "/_shutdown"))))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "hide") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_stateless_resourceParametersQueryHide parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_stateless_resourceParametersQuerySkip_snapshot parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > POST /deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_shutdown
-- 
-- The same as 'shutdown_deployment_stateless_resource' but returns the raw 'Data.ByteString.Char8.ByteString'.
shutdown_deployment_stateless_resourceRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Shutdown_deployment_stateless_resourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
shutdown_deployment_stateless_resourceRaw parameters = GHC.Base.id (Model/Private/Elasticsearch.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathDeployment_id parameters))) GHC.Base.++ ("/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind parameters))) GHC.Base.++ ("/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathRef_id parameters))) GHC.Base.++ "/_shutdown"))))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "hide") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_stateless_resourceParametersQueryHide parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_stateless_resourceParametersQuerySkip_snapshot parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > POST /deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_shutdown
-- 
-- The same as 'shutdown_deployment_stateless_resource' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
shutdown_deployment_stateless_resourceWithConfigurationRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> Shutdown_deployment_stateless_resourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
shutdown_deployment_stateless_resourceWithConfigurationRaw config
                                                           parameters = GHC.Base.id (Model/Private/Elasticsearch.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathDeployment_id parameters))) GHC.Base.++ ("/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathStateless_resource_kind parameters))) GHC.Base.++ ("/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_stateless_resourceParametersPathRef_id parameters))) GHC.Base.++ "/_shutdown"))))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "hide") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_stateless_resourceParametersQueryHide parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_stateless_resourceParametersQuerySkip_snapshot parameters) (Data.Text.pack "form") GHC.Types.False])
