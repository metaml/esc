-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation deleteOrganizationInvitations
module Model/Private/Elasticsearch.Operations.DeleteOrganizationInvitations where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.Types

-- | > DELETE /organizations/{organization_id}/invitations/{invitation_tokens}
-- 
-- Deletes one or more organization invitations. Currently unavailable in self-hosted ECE.
deleteOrganizationInvitations :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => DeleteOrganizationInvitationsParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response DeleteOrganizationInvitationsResponse) -- ^ Monadic computation which returns the result of the operation
deleteOrganizationInvitations parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either DeleteOrganizationInvitationsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right DeleteOrganizationInvitationsResponse200
                                                                                                                                                                                                   | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right DeleteOrganizationInvitationsResponse400
                                                                                                                                                                                                   | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right DeleteOrganizationInvitationsResponse404
                                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Model/Private/Elasticsearch.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE") (Data.Text.pack ("/organizations/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (deleteOrganizationInvitationsParametersPathOrganizationId parameters))) GHC.Base.++ ("/invitations/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (deleteOrganizationInvitationsParametersPathInvitationTokens parameters))) GHC.Base.++ ""))))) GHC.Base.mempty)
-- | Defines the object schema located at @paths.\/organizations\/{organization_id}\/invitations\/{invitation_tokens}.DELETE.parameters@ in the specification.
-- 
-- 
data DeleteOrganizationInvitationsParameters = DeleteOrganizationInvitationsParameters {
  -- | pathInvitation_tokens: Represents the parameter named \'invitation_tokens\'
  -- 
  -- CSV list of Invitation tokens
  deleteOrganizationInvitationsParametersPathInvitationTokens :: Data.Text.Internal.Text
  -- | pathOrganization_id: Represents the parameter named \'organization_id\'
  -- 
  -- Identifier for the Organization
  , deleteOrganizationInvitationsParametersPathOrganizationId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteOrganizationInvitationsParameters
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathInvitation_tokens" Data.Aeson.Types.ToJSON..= deleteOrganizationInvitationsParametersPathInvitationTokens obj] : ["pathOrganization_id" Data.Aeson.Types.ToJSON..= deleteOrganizationInvitationsParametersPathOrganizationId obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathInvitation_tokens" Data.Aeson.Types.ToJSON..= deleteOrganizationInvitationsParametersPathInvitationTokens obj] : ["pathOrganization_id" Data.Aeson.Types.ToJSON..= deleteOrganizationInvitationsParametersPathOrganizationId obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteOrganizationInvitationsParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteOrganizationInvitationsParameters" (\obj -> (GHC.Base.pure DeleteOrganizationInvitationsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathInvitation_tokens")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathOrganization_id"))
-- | Create a new 'DeleteOrganizationInvitationsParameters' with all required fields.
mkDeleteOrganizationInvitationsParameters :: Data.Text.Internal.Text -- ^ 'deleteOrganizationInvitationsParametersPathInvitationTokens'
  -> Data.Text.Internal.Text -- ^ 'deleteOrganizationInvitationsParametersPathOrganizationId'
  -> DeleteOrganizationInvitationsParameters
mkDeleteOrganizationInvitationsParameters deleteOrganizationInvitationsParametersPathInvitationTokens deleteOrganizationInvitationsParametersPathOrganizationId = DeleteOrganizationInvitationsParameters{deleteOrganizationInvitationsParametersPathInvitationTokens = deleteOrganizationInvitationsParametersPathInvitationTokens,
                                                                                                                                                                                                          deleteOrganizationInvitationsParametersPathOrganizationId = deleteOrganizationInvitationsParametersPathOrganizationId}
-- | Represents a response of the operation 'deleteOrganizationInvitations'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'DeleteOrganizationInvitationsResponseError' is used.
data DeleteOrganizationInvitationsResponse =
   DeleteOrganizationInvitationsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | DeleteOrganizationInvitationsResponse200 -- ^ Organization invitations deleted successfully
  | DeleteOrganizationInvitationsResponse400 -- ^ No valid invitation token was supplied. (code: \`root.invalid_data\`)
  | DeleteOrganizationInvitationsResponse404 -- ^ * Organization not found. (code: \`organization.not_found\`) * Invitation not found. (code: \`organization.invitation_not_found\`)
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | > DELETE /organizations/{organization_id}/invitations/{invitation_tokens}
-- 
-- The same as 'deleteOrganizationInvitations' but accepts an explicit configuration.
deleteOrganizationInvitationsWithConfiguration :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> DeleteOrganizationInvitationsParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response DeleteOrganizationInvitationsResponse) -- ^ Monadic computation which returns the result of the operation
deleteOrganizationInvitationsWithConfiguration config
                                               parameters = GHC.Base.fmap (\response_4 -> GHC.Base.fmap (Data.Either.either DeleteOrganizationInvitationsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right DeleteOrganizationInvitationsResponse200
                                                                                                                                                                                                                    | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right DeleteOrganizationInvitationsResponse400
                                                                                                                                                                                                                    | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right DeleteOrganizationInvitationsResponse404
                                                                                                                                                                                                                    | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_4) response_4) (Model/Private/Elasticsearch.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE") (Data.Text.pack ("/organizations/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (deleteOrganizationInvitationsParametersPathOrganizationId parameters))) GHC.Base.++ ("/invitations/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (deleteOrganizationInvitationsParametersPathInvitationTokens parameters))) GHC.Base.++ ""))))) GHC.Base.mempty)
-- | > DELETE /organizations/{organization_id}/invitations/{invitation_tokens}
-- 
-- The same as 'deleteOrganizationInvitations' but returns the raw 'Data.ByteString.Char8.ByteString'.
deleteOrganizationInvitationsRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => DeleteOrganizationInvitationsParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
deleteOrganizationInvitationsRaw parameters = GHC.Base.id (Model/Private/Elasticsearch.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE") (Data.Text.pack ("/organizations/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (deleteOrganizationInvitationsParametersPathOrganizationId parameters))) GHC.Base.++ ("/invitations/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (deleteOrganizationInvitationsParametersPathInvitationTokens parameters))) GHC.Base.++ ""))))) GHC.Base.mempty)
-- | > DELETE /organizations/{organization_id}/invitations/{invitation_tokens}
-- 
-- The same as 'deleteOrganizationInvitations' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
deleteOrganizationInvitationsWithConfigurationRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> DeleteOrganizationInvitationsParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
deleteOrganizationInvitationsWithConfigurationRaw config
                                                  parameters = GHC.Base.id (Model/Private/Elasticsearch.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE") (Data.Text.pack ("/organizations/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (deleteOrganizationInvitationsParametersPathOrganizationId parameters))) GHC.Base.++ ("/invitations/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (deleteOrganizationInvitationsParametersPathInvitationTokens parameters))) GHC.Base.++ ""))))) GHC.Base.mempty)
