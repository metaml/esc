-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation search_eligible_remote_clusters
module Model/Private/Elasticsearch.Operations.Search_eligible_remote_clusters where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.Types

-- | > POST /deployments/eligible-remote-clusters
-- 
-- Returns the list of deployments which contain eligible remote clusters for a specific version.
search_eligible_remote_clusters :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ version: The version of the Elasticsearch cluster cluster that will potentially be configured to have remote clusters.
  -> GHC.Maybe.Maybe SearchRequest -- ^ The request body to send
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response Search_eligible_remote_clustersResponse) -- ^ Monadic computation which returns the result of the operation
search_eligible_remote_clusters version
                                body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Search_eligible_remote_clustersResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Search_eligible_remote_clustersResponse200
                                                                                                                                                                                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Search_eligible_remote_clustersResponse400
                                                                                                                                                                                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Model/Private/Elasticsearch.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/deployments/eligible-remote-clusters") [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "version") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON version) (Data.Text.pack "form") GHC.Types.False] body Model/Private/Elasticsearch.Common.RequestBodyEncodingJSON)
-- | Represents a response of the operation 'search_eligible_remote_clusters'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Search_eligible_remote_clustersResponseError' is used.
data Search_eligible_remote_clustersResponse =
   Search_eligible_remote_clustersResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Search_eligible_remote_clustersResponse200 -- ^ List of deployments which contains eligible remote clusters for a specific version
  | Search_eligible_remote_clustersResponse400 -- ^ The provided version is invalid. (code: \`stackpack.invalid_version\`)
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | > POST /deployments/eligible-remote-clusters
-- 
-- The same as 'search_eligible_remote_clusters' but accepts an explicit configuration.
search_eligible_remote_clustersWithConfiguration :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text -- ^ version: The version of the Elasticsearch cluster cluster that will potentially be configured to have remote clusters.
  -> GHC.Maybe.Maybe SearchRequest -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Search_eligible_remote_clustersResponse) -- ^ Monadic computation which returns the result of the operation
search_eligible_remote_clustersWithConfiguration config
                                                 version
                                                 body = GHC.Base.fmap (\response_3 -> GHC.Base.fmap (Data.Either.either Search_eligible_remote_clustersResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Search_eligible_remote_clustersResponse200
                                                                                                                                                                                                                  | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Search_eligible_remote_clustersResponse400
                                                                                                                                                                                                                  | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_3) response_3) (Model/Private/Elasticsearch.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/deployments/eligible-remote-clusters") [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "version") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON version) (Data.Text.pack "form") GHC.Types.False] body Model/Private/Elasticsearch.Common.RequestBodyEncodingJSON)
-- | > POST /deployments/eligible-remote-clusters
-- 
-- The same as 'search_eligible_remote_clusters' but returns the raw 'Data.ByteString.Char8.ByteString'.
search_eligible_remote_clustersRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ version: The version of the Elasticsearch cluster cluster that will potentially be configured to have remote clusters.
  -> GHC.Maybe.Maybe SearchRequest -- ^ The request body to send
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
search_eligible_remote_clustersRaw version
                                   body = GHC.Base.id (Model/Private/Elasticsearch.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/deployments/eligible-remote-clusters") [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "version") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON version) (Data.Text.pack "form") GHC.Types.False] body Model/Private/Elasticsearch.Common.RequestBodyEncodingJSON)
-- | > POST /deployments/eligible-remote-clusters
-- 
-- The same as 'search_eligible_remote_clusters' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
search_eligible_remote_clustersWithConfigurationRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text -- ^ version: The version of the Elasticsearch cluster cluster that will potentially be configured to have remote clusters.
  -> GHC.Maybe.Maybe SearchRequest -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
search_eligible_remote_clustersWithConfigurationRaw config
                                                    version
                                                    body = GHC.Base.id (Model/Private/Elasticsearch.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/deployments/eligible-remote-clusters") [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "version") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON version) (Data.Text.pack "form") GHC.Types.False] body Model/Private/Elasticsearch.Common.RequestBodyEncodingJSON)
