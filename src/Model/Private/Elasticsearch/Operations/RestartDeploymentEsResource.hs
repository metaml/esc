-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation restartDeploymentEsResource
module Model/Private/Elasticsearch.Operations.RestartDeploymentEsResource where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.Types

-- | > POST /deployments/{deployment_id}/elasticsearch/{ref_id}/_restart
-- 
-- Restarts an Elasticsearch Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan.
restartDeploymentEsResource :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => RestartDeploymentEsResourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response RestartDeploymentEsResourceResponse) -- ^ Monadic computation which returns the result of the operation
restartDeploymentEsResource parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either RestartDeploymentEsResourceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 202) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right RestartDeploymentEsResourceResponse202
                                                                                                                                                                                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right RestartDeploymentEsResourceResponse404
                                                                                                                                                                                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 422) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right RestartDeploymentEsResourceResponse422
                                                                                                                                                                                               | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 449) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right RestartDeploymentEsResourceResponse449
                                                                                                                                                                                               | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 500) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right RestartDeploymentEsResourceResponse500
                                                                                                                                                                                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Model/Private/Elasticsearch.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (restartDeploymentEsResourceParametersPathDeploymentId parameters))) GHC.Base.++ ("/elasticsearch/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (restartDeploymentEsResourceParametersPathRefId parameters))) GHC.Base.++ "/_restart"))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "restore_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryRestoreSnapshot parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQuerySkipSnapshot parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "cancel_pending") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryCancelPending parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "group_attribute") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryGroupAttribute parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "shard_init_wait_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryShardInitWaitTime parameters) (Data.Text.pack "form") GHC.Types.False])
-- | Defines the object schema located at @paths.\/deployments\/{deployment_id}\/elasticsearch\/{ref_id}\/_restart.POST.parameters@ in the specification.
-- 
-- 
data RestartDeploymentEsResourceParameters = RestartDeploymentEsResourceParameters {
  -- | pathDeployment_id: Represents the parameter named \'deployment_id\'
  -- 
  -- Identifier for the Deployment.
  restartDeploymentEsResourceParametersPathDeploymentId :: Data.Text.Internal.Text
  -- | pathRef_id: Represents the parameter named \'ref_id\'
  -- 
  -- User-specified RefId for the Resource.
  , restartDeploymentEsResourceParametersPathRefId :: Data.Text.Internal.Text
  -- | queryCancel_pending: Represents the parameter named \'cancel_pending\'
  -- 
  -- If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error.
  , restartDeploymentEsResourceParametersQueryCancelPending :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | queryGroup_attribute: Represents the parameter named \'group_attribute\'
  -- 
  -- Indicates the property or properties used to divide the list of instances to restart in groups. Valid options are: \'\\_\\_all\\_\\_\' (restart all at once), \'\\_\\_zone\\_\\_\' by logical zone, \'\\_\\_name\\_\\_\' one instance at a time, or a comma-separated list of attributes of the instances
  , restartDeploymentEsResourceParametersQueryGroupAttribute :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryRestore_snapshot: Represents the parameter named \'restore_snapshot\'
  -- 
  -- When set to true and restoring from shutdown, then will restore the cluster from the last snapshot (if available).
  , restartDeploymentEsResourceParametersQueryRestoreSnapshot :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | queryShard_init_wait_time: Represents the parameter named \'shard_init_wait_time\'
  -- 
  -- The time, in seconds, to wait for shards that show no progress of initializing, before rolling the next group (default: 10 minutes)
  , restartDeploymentEsResourceParametersQueryShardInitWaitTime :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | querySkip_snapshot: Represents the parameter named \'skip_snapshot\'
  -- 
  -- If true, will not take a snapshot of the cluster before restarting.
  , restartDeploymentEsResourceParametersQuerySkipSnapshot :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON RestartDeploymentEsResourceParameters
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathDeployment_id" Data.Aeson.Types.ToJSON..= restartDeploymentEsResourceParametersPathDeploymentId obj] : ["pathRef_id" Data.Aeson.Types.ToJSON..= restartDeploymentEsResourceParametersPathRefId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCancel_pending" Data.Aeson.Types.ToJSON..=)) (restartDeploymentEsResourceParametersQueryCancelPending obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryGroup_attribute" Data.Aeson.Types.ToJSON..=)) (restartDeploymentEsResourceParametersQueryGroupAttribute obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRestore_snapshot" Data.Aeson.Types.ToJSON..=)) (restartDeploymentEsResourceParametersQueryRestoreSnapshot obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryShard_init_wait_time" Data.Aeson.Types.ToJSON..=)) (restartDeploymentEsResourceParametersQueryShardInitWaitTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySkip_snapshot" Data.Aeson.Types.ToJSON..=)) (restartDeploymentEsResourceParametersQuerySkipSnapshot obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathDeployment_id" Data.Aeson.Types.ToJSON..= restartDeploymentEsResourceParametersPathDeploymentId obj] : ["pathRef_id" Data.Aeson.Types.ToJSON..= restartDeploymentEsResourceParametersPathRefId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCancel_pending" Data.Aeson.Types.ToJSON..=)) (restartDeploymentEsResourceParametersQueryCancelPending obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryGroup_attribute" Data.Aeson.Types.ToJSON..=)) (restartDeploymentEsResourceParametersQueryGroupAttribute obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRestore_snapshot" Data.Aeson.Types.ToJSON..=)) (restartDeploymentEsResourceParametersQueryRestoreSnapshot obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryShard_init_wait_time" Data.Aeson.Types.ToJSON..=)) (restartDeploymentEsResourceParametersQueryShardInitWaitTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySkip_snapshot" Data.Aeson.Types.ToJSON..=)) (restartDeploymentEsResourceParametersQuerySkipSnapshot obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON RestartDeploymentEsResourceParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "RestartDeploymentEsResourceParameters" (\obj -> ((((((GHC.Base.pure RestartDeploymentEsResourceParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathDeployment_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathRef_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCancel_pending")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryGroup_attribute")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRestore_snapshot")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryShard_init_wait_time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySkip_snapshot"))
-- | Create a new 'RestartDeploymentEsResourceParameters' with all required fields.
mkRestartDeploymentEsResourceParameters :: Data.Text.Internal.Text -- ^ 'restartDeploymentEsResourceParametersPathDeploymentId'
  -> Data.Text.Internal.Text -- ^ 'restartDeploymentEsResourceParametersPathRefId'
  -> RestartDeploymentEsResourceParameters
mkRestartDeploymentEsResourceParameters restartDeploymentEsResourceParametersPathDeploymentId restartDeploymentEsResourceParametersPathRefId = RestartDeploymentEsResourceParameters{restartDeploymentEsResourceParametersPathDeploymentId = restartDeploymentEsResourceParametersPathDeploymentId,
                                                                                                                                                                                     restartDeploymentEsResourceParametersPathRefId = restartDeploymentEsResourceParametersPathRefId,
                                                                                                                                                                                     restartDeploymentEsResourceParametersQueryCancelPending = GHC.Maybe.Nothing,
                                                                                                                                                                                     restartDeploymentEsResourceParametersQueryGroupAttribute = GHC.Maybe.Nothing,
                                                                                                                                                                                     restartDeploymentEsResourceParametersQueryRestoreSnapshot = GHC.Maybe.Nothing,
                                                                                                                                                                                     restartDeploymentEsResourceParametersQueryShardInitWaitTime = GHC.Maybe.Nothing,
                                                                                                                                                                                     restartDeploymentEsResourceParametersQuerySkipSnapshot = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'restartDeploymentEsResource'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'RestartDeploymentEsResourceResponseError' is used.
data RestartDeploymentEsResourceResponse =
   RestartDeploymentEsResourceResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | RestartDeploymentEsResourceResponse202 -- ^ The restart command was issued successfully.
  | RestartDeploymentEsResourceResponse404 -- ^ * The Deployment specified by {deployment_id} cannot be found. (code: \`deployments.deployment_not_found\`) * The Resource specified by {ref_id} cannot be found. (code: \`deployments.deployment_resource_not_found\`)
  | RestartDeploymentEsResourceResponse422 -- ^ The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: \`deployments.deployment_resource_plan_change_error\`)
  | RestartDeploymentEsResourceResponse449 -- ^ Elevated permissions are required. (code: \`root.unauthorized.rbac.elevated_permissions_required\`)
  | RestartDeploymentEsResourceResponse500 -- ^ A Resource that was previously stored no longer exists. (code: \`deployments.deployment_resource_no_longer_exists\`)
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | > POST /deployments/{deployment_id}/elasticsearch/{ref_id}/_restart
-- 
-- The same as 'restartDeploymentEsResource' but accepts an explicit configuration.
restartDeploymentEsResourceWithConfiguration :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> RestartDeploymentEsResourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response RestartDeploymentEsResourceResponse) -- ^ Monadic computation which returns the result of the operation
restartDeploymentEsResourceWithConfiguration config
                                             parameters = GHC.Base.fmap (\response_6 -> GHC.Base.fmap (Data.Either.either RestartDeploymentEsResourceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 202) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right RestartDeploymentEsResourceResponse202
                                                                                                                                                                                                                | (\status_8 -> Network.HTTP.Types.Status.statusCode status_8 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right RestartDeploymentEsResourceResponse404
                                                                                                                                                                                                                | (\status_9 -> Network.HTTP.Types.Status.statusCode status_9 GHC.Classes.== 422) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right RestartDeploymentEsResourceResponse422
                                                                                                                                                                                                                | (\status_10 -> Network.HTTP.Types.Status.statusCode status_10 GHC.Classes.== 449) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right RestartDeploymentEsResourceResponse449
                                                                                                                                                                                                                | (\status_11 -> Network.HTTP.Types.Status.statusCode status_11 GHC.Classes.== 500) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right RestartDeploymentEsResourceResponse500
                                                                                                                                                                                                                | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_6) response_6) (Model/Private/Elasticsearch.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (restartDeploymentEsResourceParametersPathDeploymentId parameters))) GHC.Base.++ ("/elasticsearch/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (restartDeploymentEsResourceParametersPathRefId parameters))) GHC.Base.++ "/_restart"))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "restore_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryRestoreSnapshot parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQuerySkipSnapshot parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "cancel_pending") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryCancelPending parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "group_attribute") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryGroupAttribute parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "shard_init_wait_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryShardInitWaitTime parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > POST /deployments/{deployment_id}/elasticsearch/{ref_id}/_restart
-- 
-- The same as 'restartDeploymentEsResource' but returns the raw 'Data.ByteString.Char8.ByteString'.
restartDeploymentEsResourceRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => RestartDeploymentEsResourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
restartDeploymentEsResourceRaw parameters = GHC.Base.id (Model/Private/Elasticsearch.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (restartDeploymentEsResourceParametersPathDeploymentId parameters))) GHC.Base.++ ("/elasticsearch/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (restartDeploymentEsResourceParametersPathRefId parameters))) GHC.Base.++ "/_restart"))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "restore_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryRestoreSnapshot parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQuerySkipSnapshot parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "cancel_pending") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryCancelPending parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "group_attribute") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryGroupAttribute parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "shard_init_wait_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryShardInitWaitTime parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > POST /deployments/{deployment_id}/elasticsearch/{ref_id}/_restart
-- 
-- The same as 'restartDeploymentEsResource' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
restartDeploymentEsResourceWithConfigurationRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> RestartDeploymentEsResourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
restartDeploymentEsResourceWithConfigurationRaw config
                                                parameters = GHC.Base.id (Model/Private/Elasticsearch.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (restartDeploymentEsResourceParametersPathDeploymentId parameters))) GHC.Base.++ ("/elasticsearch/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (restartDeploymentEsResourceParametersPathRefId parameters))) GHC.Base.++ "/_restart"))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "restore_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryRestoreSnapshot parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQuerySkipSnapshot parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "cancel_pending") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryCancelPending parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "group_attribute") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryGroupAttribute parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "shard_init_wait_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> restartDeploymentEsResourceParametersQueryShardInitWaitTime parameters) (Data.Text.pack "form") GHC.Types.False])
