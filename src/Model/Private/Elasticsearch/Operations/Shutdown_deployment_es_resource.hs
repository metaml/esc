-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation shutdown_deployment_es_resource
module Model/Private/Elasticsearch.Operations.Shutdown_deployment_es_resource where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Model/Private/Elasticsearch.Common
import Model/Private/Elasticsearch.Types

-- | > POST /deployments/{deployment_id}/elasticsearch/{ref_id}/_shutdown
-- 
-- Shutdown Elasticsearch Resource belonging to a given Deployment.
shutdown_deployment_es_resource :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Shutdown_deployment_es_resourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response Shutdown_deployment_es_resourceResponse) -- ^ Monadic computation which returns the result of the operation
shutdown_deployment_es_resource parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Shutdown_deployment_es_resourceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_es_resourceResponse200
                                                                                                                                                                                                       | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_es_resourceResponse400
                                                                                                                                                                                                       | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_es_resourceResponse404
                                                                                                                                                                                                       | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 500) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_es_resourceResponse500
                                                                                                                                                                                                       | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Model/Private/Elasticsearch.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_es_resourceParametersPathDeployment_id parameters))) GHC.Base.++ ("/elasticsearch/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_es_resourceParametersPathRef_id parameters))) GHC.Base.++ "/_shutdown"))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "hide") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_es_resourceParametersQueryHide parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_es_resourceParametersQuerySkip_snapshot parameters) (Data.Text.pack "form") GHC.Types.False])
-- | Defines the object schema located at @paths.\/deployments\/{deployment_id}\/elasticsearch\/{ref_id}\/_shutdown.POST.parameters@ in the specification.
-- 
-- 
data Shutdown_deployment_es_resourceParameters = Shutdown_deployment_es_resourceParameters {
  -- | pathDeployment_id: Represents the parameter named \'deployment_id\'
  -- 
  -- Identifier for the Deployment.
  shutdown_deployment_es_resourceParametersPathDeployment_id :: Data.Text.Internal.Text
  -- | pathRef_id: Represents the parameter named \'ref_id\'
  -- 
  -- User-specified RefId for the Resource.
  , shutdown_deployment_es_resourceParametersPathRef_id :: Data.Text.Internal.Text
  -- | queryHide: Represents the parameter named \'hide\'
  -- 
  -- Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators.
  , shutdown_deployment_es_resourceParametersQueryHide :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | querySkip_snapshot: Represents the parameter named \'skip_snapshot\'
  -- 
  -- If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible).
  , shutdown_deployment_es_resourceParametersQuerySkip_snapshot :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Shutdown_deployment_es_resourceParameters
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathDeployment_id" Data.Aeson.Types.ToJSON..= shutdown_deployment_es_resourceParametersPathDeployment_id obj] : ["pathRef_id" Data.Aeson.Types.ToJSON..= shutdown_deployment_es_resourceParametersPathRef_id obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryHide" Data.Aeson.Types.ToJSON..=)) (shutdown_deployment_es_resourceParametersQueryHide obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySkip_snapshot" Data.Aeson.Types.ToJSON..=)) (shutdown_deployment_es_resourceParametersQuerySkip_snapshot obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathDeployment_id" Data.Aeson.Types.ToJSON..= shutdown_deployment_es_resourceParametersPathDeployment_id obj] : ["pathRef_id" Data.Aeson.Types.ToJSON..= shutdown_deployment_es_resourceParametersPathRef_id obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryHide" Data.Aeson.Types.ToJSON..=)) (shutdown_deployment_es_resourceParametersQueryHide obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySkip_snapshot" Data.Aeson.Types.ToJSON..=)) (shutdown_deployment_es_resourceParametersQuerySkip_snapshot obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Shutdown_deployment_es_resourceParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Shutdown_deployment_es_resourceParameters" (\obj -> (((GHC.Base.pure Shutdown_deployment_es_resourceParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathDeployment_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathRef_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryHide")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySkip_snapshot"))
-- | Create a new 'Shutdown_deployment_es_resourceParameters' with all required fields.
mkShutdown_deployment_es_resourceParameters :: Data.Text.Internal.Text -- ^ 'shutdown_deployment_es_resourceParametersPathDeployment_id'
  -> Data.Text.Internal.Text -- ^ 'shutdown_deployment_es_resourceParametersPathRef_id'
  -> Shutdown_deployment_es_resourceParameters
mkShutdown_deployment_es_resourceParameters shutdown_deployment_es_resourceParametersPathDeployment_id shutdown_deployment_es_resourceParametersPathRef_id = Shutdown_deployment_es_resourceParameters{shutdown_deployment_es_resourceParametersPathDeployment_id = shutdown_deployment_es_resourceParametersPathDeployment_id,
                                                                                                                                                                                                       shutdown_deployment_es_resourceParametersPathRef_id = shutdown_deployment_es_resourceParametersPathRef_id,
                                                                                                                                                                                                       shutdown_deployment_es_resourceParametersQueryHide = GHC.Maybe.Nothing,
                                                                                                                                                                                                       shutdown_deployment_es_resourceParametersQuerySkip_snapshot = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'shutdown_deployment_es_resource'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Shutdown_deployment_es_resourceResponseError' is used.
data Shutdown_deployment_es_resourceResponse =
   Shutdown_deployment_es_resourceResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Shutdown_deployment_es_resourceResponse200 -- ^ Standard response.
  | Shutdown_deployment_es_resourceResponse400 -- ^ Parameter is restricted and can only be set by a Platform administrator. (code: \`deployments.restricted_parameter\`)
  | Shutdown_deployment_es_resourceResponse404 -- ^ * The Deployment specified by {deployment_id} cannot be found. (code: \`deployments.deployment_not_found\`) * The Resource specified by {ref_id} cannot be found. (code: \`deployments.deployment_resource_not_found\`)
  | Shutdown_deployment_es_resourceResponse500 -- ^ A Resource that was previously stored no longer exists. (code: \`deployments.deployment_resource_no_longer_exists\`)
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | > POST /deployments/{deployment_id}/elasticsearch/{ref_id}/_shutdown
-- 
-- The same as 'shutdown_deployment_es_resource' but accepts an explicit configuration.
shutdown_deployment_es_resourceWithConfiguration :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> Shutdown_deployment_es_resourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Shutdown_deployment_es_resourceResponse) -- ^ Monadic computation which returns the result of the operation
shutdown_deployment_es_resourceWithConfiguration config
                                                 parameters = GHC.Base.fmap (\response_5 -> GHC.Base.fmap (Data.Either.either Shutdown_deployment_es_resourceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_es_resourceResponse200
                                                                                                                                                                                                                        | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_es_resourceResponse400
                                                                                                                                                                                                                        | (\status_8 -> Network.HTTP.Types.Status.statusCode status_8 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_es_resourceResponse404
                                                                                                                                                                                                                        | (\status_9 -> Network.HTTP.Types.Status.statusCode status_9 GHC.Classes.== 500) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Shutdown_deployment_es_resourceResponse500
                                                                                                                                                                                                                        | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_5) response_5) (Model/Private/Elasticsearch.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_es_resourceParametersPathDeployment_id parameters))) GHC.Base.++ ("/elasticsearch/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_es_resourceParametersPathRef_id parameters))) GHC.Base.++ "/_shutdown"))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "hide") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_es_resourceParametersQueryHide parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_es_resourceParametersQuerySkip_snapshot parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > POST /deployments/{deployment_id}/elasticsearch/{ref_id}/_shutdown
-- 
-- The same as 'shutdown_deployment_es_resource' but returns the raw 'Data.ByteString.Char8.ByteString'.
shutdown_deployment_es_resourceRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Shutdown_deployment_es_resourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> Model/Private/Elasticsearch.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
shutdown_deployment_es_resourceRaw parameters = GHC.Base.id (Model/Private/Elasticsearch.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_es_resourceParametersPathDeployment_id parameters))) GHC.Base.++ ("/elasticsearch/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_es_resourceParametersPathRef_id parameters))) GHC.Base.++ "/_shutdown"))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "hide") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_es_resourceParametersQueryHide parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_es_resourceParametersQuerySkip_snapshot parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > POST /deployments/{deployment_id}/elasticsearch/{ref_id}/_shutdown
-- 
-- The same as 'shutdown_deployment_es_resource' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
shutdown_deployment_es_resourceWithConfigurationRaw :: forall m . Model/Private/Elasticsearch.Common.MonadHTTP m => Model/Private/Elasticsearch.Common.Configuration -- ^ The configuration to use in the request
  -> Shutdown_deployment_es_resourceParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
shutdown_deployment_es_resourceWithConfigurationRaw config
                                                    parameters = GHC.Base.id (Model/Private/Elasticsearch.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/deployments/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_es_resourceParametersPathDeployment_id parameters))) GHC.Base.++ ("/elasticsearch/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Model/Private/Elasticsearch.Common.stringifyModel (shutdown_deployment_es_resourceParametersPathRef_id parameters))) GHC.Base.++ "/_shutdown"))))) [Model/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "hide") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_es_resourceParametersQueryHide parameters) (Data.Text.pack "form") GHC.Types.False,
odel/Private/Elasticsearch.Common.QueryParameter (Data.Text.pack "skip_snapshot") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> shutdown_deployment_es_resourceParametersQuerySkip_snapshot parameters) (Data.Text.pack "form") GHC.Types.False])
